release-info.argument=<file>|add:<key1>=<value1>:<key2>=<value2>:...|del:<key list>

release-info.description=\
<file> option is to load release properties from the supplied file.\n\
add: is to add properties to the 'release' file.\n\
Any number of <key>=<value> pairs can be passed.\n\
del: is to delete the list of keys in release file.

class-optim.argument=<all|forName-folding>[:log=<log file>]

class-optim.description=\
Class optimization. Warning: This plugin is experimental.\n\
An optional <log file> can be specified to log applied optimizations.

compress.argument=<0|1|2>[:filter=<pattern>]

compress.description=\
Compress all resources in the output image.\n\
Level 0: constant string sharing\n\
Level 1: ZIP\n\
Level 2: both.\n\
An optional filter can be specified to list the pattern of files to be filtered.\n\
Use ^ for negation. e.g.: *Exception.class,*Error.class,^/java.base/java/lang/*

compact-cp.argument=<resource paths>

compact-cp.description=Constant Pool strings sharing.\n\
By default, all resources are compressed. You can express the set \n\
of resources to compress or not compress (use ^ for negation).

copy-files.argument=<List of <file path>=<image target> to copy to the image>.

copy-files.description=\
If files to copy are not absolute path, JDK home dir is used.\n\
e.g.: jrt-fs.jar,LICENSE,/home/me/myfile.txt=somewehere/conf.txt

exclude-files.argument=<files to exclude | files of excluded files>

exclude-files.description=\
Specify files to exclude. e.g.: *.diz, /java.base/native/client/*

exclude-resources.argument=<resources to exclude | file of excluded resources>

exclude-resources.description=\
Specify resources to exclude. e.g.: *.jcov, */META-INF/*

installed-modules.description=Fast loading of module descriptors (always enabled)

onoff.argument=<on|off>

sort-resources.argument=<paths in priority order | file with resource paths>

sort-resources.description=\
Sort resources. e.g.: */modules-info.class,/java-base/java/lang/*

strip-debug.description=\
Strip debug information from the output image

strip-native-commands.description=\
Exclude native commands (such as java/java.exe) from the image

vm.argument=<client|server|minimal|all>

vm.description=\
Select the HotSpot VM in the output image.  Default is all
 
zip.argument=[comma separated list of resource paths]

zip.description=ZIP Compression

include-locales.argument=\
<langtag>[,<langtag>]*

include-locales.description=\
BCP 47 language tags separated by a comma, allowing locale matching\n\
defined in RFC 4647. e.g.: en,ja,*-IN

include-locales.missingpackages=\
Missing locale data packages in jdk.localedata:\n\t

include-locales.nomatchinglocales=\
No matching locales found for \"%s\". Check the specified pattern.

include-locales.invalidtag=\
Invalid language tag: %s

main.status.ok=Functional.

main.status.not.ok= Not functional.

plugin.plugins.header=\
List of available plugin options:

plugin.opt.list-plugins=\
\  --list-plugins                    List available plugins

plugin.opt.post-process-path=\
\  --post-process-path <imagefile>   Post process an existing image

plugin.opt.resources-last-sorter=\
\  --resources-last-sorter <name>    The last plugin allowed to sort resources

plugin.opt.plugins-modulepath=\
\  --plugin-module-path <modulepath> Custom plugins module path

plugin.opt.c=\
\  -c, --compress=2                  Enable compression of resources (level 2)

plugin.opt.G=\
\  -G, --strip-debug                 Strip debug information

main.plugin.name=\
\Plugin Name

main.plugin.class=\
\Plugin Class

main.plugin.module=\
\Plugin Module

main.plugin.category=\
\Category

main.plugin.description=\
\Description

main.plugin.post.processors=\
Image Post Processors:

main.plugin.argument=\
\Argument

main.plugin.range.from=\
Range from

main.plugin.range.to=\
to

main.plugin.option=\
\Option

main.plugin.no.value=\
\<empty>

main.plugin.state=\
Functional state

err.provider.not.functional=The provider {0} is not functional.

err.plugin.mutiple.options=More than one plugin enabled by {0} option
err.provider.additional.arg.error=Error in additional argument specification in {0} option: {1}

err.no.plugins.path=No plugins path argument.

err.dir.already.exits=directory already exists: {0} 

err.invalid.index=invalid index for option {0}

err.plugin.option.not.set=Option {0} must be set.

warn.thirdparty.plugins=\
Enabling third party plugins can lead to unusable generated image.

warn.thirdparty.plugins.enabled=\
You have enabled third party plugins.
