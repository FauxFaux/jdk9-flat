#
# Copyright (c) 2011, 2014, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

################################################################################
#
# Generate files using the charsetmapping tool
#
CHARSET_DATA_DIR := $(JDK_TOPDIR)/make/data/charsetmapping
CHARSET_GENSRC_JAVA_DIR_BASE := $(SUPPORT_OUTPUTDIR)/gensrc/java.base/sun/nio/cs
CHARSET_DONE_BASE := $(CHARSET_GENSRC_JAVA_DIR_BASE)/_the.charsetmapping
CHARSET_TEMPLATES := \
    $(CHARSET_DATA_DIR)/SingleByte-X.java.template \
    $(CHARSET_DATA_DIR)/DoubleByte-X.java.template

$(CHARSET_DONE_BASE)-sbcs: $(CHARSET_DATA_DIR)/sbcs \
    $(CHARSET_TEMPLATES) $(BUILD_TOOLS_JDK)
	$(MKDIR) -p $(@D)
	$(TOOL_CHARSETMAPPING) $(CHARSET_DATA_DIR) $(CHARSET_GENSRC_JAVA_DIR_BASE) sbcs
	$(TOUCH) '$@'

GENSRC_JAVA_BASE += $(CHARSET_DONE_BASE)-sbcs

################################################################################
#
# Generate the sun/nio/cs/StandardCharsets.java file
#
CHARSET_STANDARD_GENSRC_DIR := $(SUPPORT_OUTPUTDIR)/gensrc/java.base/_standardcharsets
CHARSET_STANDARD_DATA := $(CHARSET_DATA_DIR)/standard-charsets
CHARSET_STANDARD_JAVA :=  sun/nio/cs/StandardCharsets.java

CHARSET_ALIASES_TABLES_AWK := ' \
    BEGIN { n = 1; m = 1; } \
    /^[ \t]*charset / { \
      csn = $$2; cln = $$3; \
      lcsn = tolower(csn); \
      lcsns[n++] = lcsn; \
      csns[lcsn] = csn; \
      classMap[lcsn] = cln; \
      if (n > 2) \
        printf "    };\n\n"; \
      printf "    static final String[] aliases_%s = new String[] {\n", cln; \
    } \
    /^[ \t]*alias / { \
      acsns[m++] = tolower($$2); \
      aliasMap[tolower($$2)] = lcsn; \
      printf "        \"%s\",\n", $$2; \
    } \
    END { \
      printf "    };\n\n"; \
    } '

CHARSET_ALIASES_MAP_AWK := ' \
    /^[ \t]*charset / { \
      csn = $$2; \
      lcsn = tolower(csn); \
    } \
    /^[ \t]*alias / { \
      an = tolower($$2); \
      printf "%-20s \"%s\"\n", an, lcsn; \
    } '

CHARSET_CLASSES_MAP_AWK := ' \
    /^[ \t]*charset / { \
      csn = $$2; cln = $$3; \
      lcsn = tolower(csn); \
      printf "%-20s \"%s\"\n", lcsn, cln; \
    } '

# This target should be referenced using the order-only operator (|)
$(CHARSET_STANDARD_GENSRC_DIR):
	$(MKDIR) -p '$@'

$(CHARSET_STANDARD_GENSRC_DIR)/aliases-tables.java.snippet: $(CHARSET_STANDARD_DATA) \
    | $(CHARSET_STANDARD_GENSRC_DIR)
	$(NAWK) < '$<' > '$@' $(CHARSET_ALIASES_TABLES_AWK)

$(CHARSET_STANDARD_GENSRC_DIR)/aliases-map: $(CHARSET_STANDARD_DATA) \
    | $(CHARSET_STANDARD_GENSRC_DIR)
	$(NAWK) < '$<' > '$@' $(CHARSET_ALIASES_MAP_AWK)

$(CHARSET_STANDARD_GENSRC_DIR)/classes-map: $(CHARSET_STANDARD_DATA) \
    | $(CHARSET_STANDARD_GENSRC_DIR)
	$(NAWK) < '$<' > '$@' $(CHARSET_CLASSES_MAP_AWK)

$(CHARSET_STANDARD_GENSRC_DIR)/aliases-map.java.snippet: $(CHARSET_STANDARD_GENSRC_DIR)/aliases-map \
    $(BUILD_TOOLS_JDK) | $(CHARSET_STANDARD_GENSRC_DIR)
	$(TOOL_HASHER) -i Aliases < '$<' > '$@'

$(CHARSET_STANDARD_GENSRC_DIR)/classes-map.java.snippet: $(CHARSET_STANDARD_GENSRC_DIR)/classes-map \
    $(BUILD_TOOLS_JDK) | $(CHARSET_STANDARD_GENSRC_DIR)
	$(TOOL_HASHER) -i Classes < '$<' > '$@'

$(CHARSET_STANDARD_GENSRC_DIR)/cache-map.java.snippet: $(CHARSET_STANDARD_GENSRC_DIR)/classes-map \
    $(BUILD_TOOLS_JDK) | $(CHARSET_STANDARD_GENSRC_DIR)
	$(TOOL_HASHER) -i -e Cache -t Charset < '$<' > '$@'

$(eval $(call SetupTextFileProcessing, BUILD_CHARSET_STANDARD, \
    SOURCE_FILES := $(JDK_TOPDIR)/src/java.base/share/classes/$(CHARSET_STANDARD_JAVA).template, \
    OUTPUT_FILE := $(SUPPORT_OUTPUTDIR)/gensrc/java.base/$(CHARSET_STANDARD_JAVA), \
    INCLUDES := \
        _INCLUDE_ALIASES_TABLES_ => $(CHARSET_STANDARD_GENSRC_DIR)/aliases-tables.java.snippet ; \
        _INCLUDE_ALIASES_MAP_ => $(CHARSET_STANDARD_GENSRC_DIR)/aliases-map.java.snippet ; \
        _INCLUDE_CLASSES_MAP_ => $(CHARSET_STANDARD_GENSRC_DIR)/classes-map.java.snippet ; \
        _INCLUDE_CACHE_MAP_ => $(CHARSET_STANDARD_GENSRC_DIR)/cache-map.java.snippet ; , \
))

# Processing of template depends on the snippets being generated first
$(BUILD_CHARSET_STANDARD): \
    $(CHARSET_STANDARD_GENSRC_DIR)/aliases-tables.java.snippet \
    $(CHARSET_STANDARD_GENSRC_DIR)/aliases-map.java.snippet \
    $(CHARSET_STANDARD_GENSRC_DIR)/classes-map.java.snippet \
    $(CHARSET_STANDARD_GENSRC_DIR)/cache-map.java.snippet

GENSRC_JAVA_BASE += $(BUILD_CHARSET_STANDARD)
