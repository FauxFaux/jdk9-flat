#
# Copyright (c) 2014, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

# This must be the first rule
default: all

include $(SPEC)
include MakeBase.gmk
include JavaCompilation.gmk

include CommonLangtools.gmk

# Setup a compiler configuration using javac from the interim langtools jar
# that generates code for the new jdk that is being built. The code compiled 
# by this compiler setup, cannot necessarily be run with the bootstrap jvm.
$(eval $(call SetupJavaCompiler,GENERATE_NEWBYTECODE, \
    JVM := $(JAVA), \
    JAVAC := $(NEW_JAVAC), \
    FLAGS := -XDignore.symbol.file=true -Xlint:all$(COMMA)-deprecation -Werror, \
    SERVER_DIR := $(SJAVAC_SERVER_DIR), \
    SERVER_JVM := $(SJAVAC_SERVER_JAVA)))

$(eval $(call SetupJavaCompilation,BUILD_FULL_LANGTOOLS, \
    SETUP := GENERATE_NEWBYTECODE, \
    SRC := $(LANGTOOLS_TOPDIR)/src/share/classes \
        $(LANGTOOLS_OUTPUTDIR)/gensrc \
        $(LANGTOOLS_OUTPUTDIR)/genstubs, \
    EXCLUDES := java/util java/io java/nio, \
    COPY := $(RESOURCE_SUFFIXES), \
    BIN := $(LANGTOOLS_OUTPUTDIR)/classes, \
    JAR := $(LANGTOOLS_OUTPUTDIR)/dist/lib/classes.jar))

# Construct the source zip separately to avoid picking up the genstubs sources.
$(eval $(call SetupZipArchive,ZIP_FULL_LANGTOOLS_SOURCE, \
    SRC := $(LANGTOOLS_TOPDIR)/src/share/classes $(LANGTOOLS_OUTPUTDIR)/gensrc, \
    ZIP := $(LANGTOOLS_OUTPUTDIR)/dist/lib/src.zip))

all: \
    $(BUILD_FULL_LANGTOOLS) \
    $(ZIP_FULL_LANGTOOLS_SOURCE)
