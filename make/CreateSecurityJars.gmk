#
# Copyright (c) 2013, 2014, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

default: all

include $(SPEC)
include MakeBase.gmk
include JavaCompilation.gmk

##########################################################################################
# Create manifest for security jars
#
# Include these extra attributes for now, should probably take out.
#
MAINMANIFEST := $(JDK_TOPDIR)/make/data/mainmanifest/manifest.mf
JCE_MANIFEST := $(JDK_OUTPUTDIR)/jce/unsigned/_the.security.manifest.mf

$(JCE_MANIFEST): $(MAINMANIFEST)
	$(MKDIR) -p $(@D)
	$(RM) $@ $@.tmp
	$(SED) -e "s#@@RELEASE@@#$(JDK_VERSION)#" \
	    -e "s#@@COMPANY_NAME@@#$(COMPANY_NAME)#" \
	    $(MAINMANIFEST) >> $@.tmp
	$(ECHO) "Extension-Name: javax.crypto" >> $@.tmp
	$(ECHO) "Implementation-Vendor-Id: com.sun" >> $@.tmp
	$(ECHO) "Release-Version: $(RELEASE)" >> $@.tmp
	$(MV) $@.tmp $@

##########################################################################################
# For crypto jars, always build the jar.
#
# The source for the crypto jars is not available for all licensees.
# The BUILD_CRYPTO variable is set to no if these jars can't be built
# to skip that step of the build.

SUNPKCS11_JAR_DST := $(JDK_OUTPUTDIR)/lib/ext/sunpkcs11.jar
SUNPKCS11_JAR_UNSIGNED := $(JDK_OUTPUTDIR)/jce/unsigned/sunpkcs11.jar

$(eval $(call SetupArchive,BUILD_SUNPKCS11_JAR, , \
    SRCS := $(JDK_OUTPUTDIR)/modules/jdk.crypto.pkcs11, \
    SUFFIXES := .class, \
    INCLUDES := sun/security/pkcs11, \
    JAR := $(SUNPKCS11_JAR_UNSIGNED), \
    MANIFEST := $(JCE_MANIFEST), \
    SKIP_METAINF := true))

$(SUNPKCS11_JAR_UNSIGNED): $(JCE_MANIFEST)

$(SUNPKCS11_JAR_DST): $(SUNPKCS11_JAR_UNSIGNED)
	$(install-file)

TARGETS += $(SUNPKCS11_JAR_UNSIGNED) $(SUNPKCS11_JAR_DST)

##########################################################################################

SUNEC_JAR_DST := $(JDK_OUTPUTDIR)/lib/ext/sunec.jar
SUNEC_JAR_UNSIGNED := $(JDK_OUTPUTDIR)/jce/unsigned/sunec.jar

$(eval $(call SetupArchive,BUILD_SUNEC_JAR, , \
    SRCS := $(JDK_OUTPUTDIR)/modules/jdk.crypto.ec, \
    SUFFIXES := .class, \
    INCLUDES := sun/security/ec, \
    JAR := $(SUNEC_JAR_UNSIGNED), \
    MANIFEST := $(JCE_MANIFEST), \
    SKIP_METAINF := true))

$(SUNEC_JAR_UNSIGNED): $(JCE_MANIFEST)

$(SUNEC_JAR_DST): $(SUNEC_JAR_UNSIGNED)
	$(install-file)

TARGETS += $(SUNEC_JAR_UNSIGNED) $(SUNEC_JAR_DST)

##########################################################################################

SUNJCE_PROVIDER_JAR_DST := $(JDK_OUTPUTDIR)/lib/ext/sunjce_provider.jar
SUNJCE_PROVIDER_JAR_UNSIGNED := \
    $(JDK_OUTPUTDIR)/jce/unsigned/sunjce_provider.jar

ifneq ($(BUILD_CRYPTO), no)
  $(eval $(call SetupArchive,BUILD_SUNJCE_PROVIDER_JAR, , \
      SRCS := $(JDK_OUTPUTDIR)/modules/java.base, \
      SUFFIXES := .class, \
      INCLUDES := com/sun/crypto/provider, \
      JAR := $(SUNJCE_PROVIDER_JAR_UNSIGNED), \
      MANIFEST := $(JCE_MANIFEST), \
      SKIP_METAINF := true))

  $(SUNJCE_PROVIDER_JAR_UNSIGNED): $(JCE_MANIFEST)

  TARGETS += $(SUNJCE_PROVIDER_JAR_UNSIGNED)
endif

$(SUNJCE_PROVIDER_JAR_DST): $(SUNJCE_PROVIDER_JAR_UNSIGNED)
	$(install-file)

TARGETS += $(SUNJCE_PROVIDER_JAR_DST)

##########################################################################################

JCE_JAR_DST := $(JDK_OUTPUTDIR)/lib/jce.jar
JCE_JAR_UNSIGNED := $(JDK_OUTPUTDIR)/jce/unsigned/jce.jar

ifneq ($(BUILD_CRYPTO), no)
  $(eval $(call SetupArchive,BUILD_JCE_JAR, , \
      SRCS := $(JDK_OUTPUTDIR)/modules/java.base, \
      SUFFIXES := .class, \
      INCLUDES := javax/crypto sun/security/internal, \
      JAR := $(JCE_JAR_UNSIGNED), \
      MANIFEST := $(JCE_MANIFEST), \
      SKIP_METAINF := true))

  $(JCE_JAR_UNSIGNED): $(JCE_MANIFEST)

  TARGETS += $(JCE_JAR_UNSIGNED)
endif

$(JCE_JAR_DST): $(JCE_JAR_UNSIGNED)
	$(install-file)

TARGETS += $(JCE_JAR_DST)

##########################################################################################

ifeq ($(OPENJDK_TARGET_OS), windows)

  SUNMSCAPI_JAR_DST := $(JDK_OUTPUTDIR)/lib/ext/sunmscapi.jar
  SUNMSCAPI_JAR_UNSIGNED := $(JDK_OUTPUTDIR)/jce/unsigned/sunmscapi.jar

  $(eval $(call SetupArchive,BUILD_SUNMSCAPI_JAR, , \
      SRCS := $(JDK_OUTPUTDIR)/modules/jdk.crypto.mscapi, \
      SUFFIXES := .class, \
      INCLUDES := sun/security/mscapi, \
      JAR := $(SUNMSCAPI_JAR_UNSIGNED), \
      MANIFEST := $(JCE_MANIFEST), \
      SKIP_METAINF := true))

  $(SUNMSCAPI_JAR_UNSIGNED): $(JCE_MANIFEST)

  $(SUNMSCAPI_JAR_DST): $(SUNMSCAPI_JAR_UNSIGNED)
	$(install-file)

  TARGETS += $(SUNMSCAPI_JAR_UNSIGNED) $(SUNMSCAPI_JAR_DST)

endif

##########################################################################################

ifeq ($(OPENJDK_TARGET_OS), solaris)

  UCRYPTO_JAR_DST := $(JDK_OUTPUTDIR)/lib/ext/ucrypto.jar
  UCRYPTO_JAR_UNSIGNED := $(JDK_OUTPUTDIR)/jce/unsigned/ucrypto.jar

  $(eval $(call SetupArchive,BUILD_UCRYPTO_JAR, , \
      SRCS := $(JDK_OUTPUTDIR)/modules/jdk.crypto.ucrypto, \
      SUFFIXES := .class, \
      INCLUDES := com/oracle/security/ucrypto, \
      JAR := $(UCRYPTO_JAR_UNSIGNED), \
      MANIFEST := $(JCE_MANIFEST), \
      SKIP_METAINF := true))

  $(UCRYPTO_JAR_UNSIGNED): $(JCE_MANIFEST)

  $(UCRYPTO_JAR_DST): $(UCRYPTO_JAR_UNSIGNED)
	$(install-file)

  TARGETS += $(UCRYPTO_JAR_UNSIGNED) $(UCRYPTO_JAR_DST)

endif

all: $(TARGETS)

.PHONY: default all
