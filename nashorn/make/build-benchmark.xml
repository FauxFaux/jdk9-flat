<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2010, 2013, Oracle and/or its affiliates. All rights reserved.
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 
 This code is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License version 2 only, as
 published by the Free Software Foundation.
 
 This code is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 version 2 for more details (a copy is included in the LICENSE file that
 accompanied this code).
 
 You should have received a copy of the GNU General Public License version
 2 along with this work; if not, write to the Free Software Foundation,
 Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 
 Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 or visit www.oracle.com if you need additional information or have any
 questions.
-->
<project name="nashorn-benchmarks" default="all" basedir="..">

  <target name="octane-init" depends="jar">
    <fileset id="octane-set"
	     dir="${octane-test-sys-prop.test.js.roots}"
	     excludes="${octane-test-sys-prop.test.js.exclude.list}">
      <include name="*.js"/>
    </fileset>
    <pathconvert pathsep=" " property="octane-tests" refid="octane-set"/>
    <property name="extra-arg" value=""/>
  </target>

  <!-- box2d -->
  <target name="box2d-init">
    <property name="octane-tests" value="${octane-test-sys-prop.test.js.roots}/box2d.js"/>
  </target>

  <target name="octane-box2d" depends="jar, box2d-init, octane-verbose">
    <antcall target="run-octane"/>
  </target>

  <target name="octane-box2d-v8" depends="jar, box2d-init, octane-verbose">
    <antcall target="run-octane-v8"/>
  </target>

  <target name="octane-box2d-rhino" depends="jar, box2d-init, octane-verbose">
    <antcall target="run-octane-rhino"/>
  </target>

  <!-- code-load -->  
  <target name="code-load-init">
    <property name="octane-tests" value="${octane-test-sys-prop.test.js.roots}/code-load.js"/>
  </target>

  <target name="octane-code-load" depends="jar, code-load-init, octane-verbose">
    <antcall target="run-octane"/>
  </target>

  <target name="octane-code-load-v8" depends="jar, code-load-init, octane-verbose">
    <antcall target="run-octane-v8"/>
  </target>

  <target name="octane-code-load-rhino" depends="jar, code-load-init, octane-verbose">
    <antcall target="run-octane-rhino"/>
  </target>

  <!-- crypto -->
  <target name="crypto-init">
    <property name="octane-tests" value="${octane-test-sys-prop.test.js.roots}/crypto.js"/>
  </target>

  <target name="octane-crypto" depends="jar, crypto-init, octane-verbose">
    <antcall target="run-octane"/>
  </target>

  <target name="octane-crypto-v8" depends="jar, crypto-init, octane-verbose">
    <antcall target="run-octane-v8"/>
  </target>

  <target name="octane-crypto-rhino" depends="jar, crypto-init, octane-verbose">
    <antcall target="run-octane-rhino"/>
  </target>

  <!-- deltablue -->
  <target name="deltablue-init">
    <property name="octane-tests" value="${octane-test-sys-prop.test.js.roots}/deltablue.js"/>
  </target>

  <target name="octane-deltablue" depends="jar, deltablue-init, octane-verbose">
    <antcall target="run-octane"/>
  </target>

  <target name="octane-deltablue-v8" depends="jar, deltablue-init, octane-verbose">
    <antcall target="run-octane-v8"/>
  </target>

  <target name="octane-deltablue-rhino" depends="jar, deltablue-init, octane-verbose">
    <antcall target="run-octane-rhino"/>
  </target>

  <!-- earley-boyer -->
  <target name="earley-boyer-init">
    <property name="octane-tests" value="${octane-test-sys-prop.test.js.roots}/earley-boyer.js"/>
  </target>

  <target name="octane-earley-boyer" depends="jar, earley-boyer-init, octane-verbose">
    <antcall target="run-octane"/>
  </target>

  <target name="octane-earley-boyer-v8" depends="jar, earley-boyer-init, octane-verbose">
    <antcall target="run-octane-v8"/>
  </target>

  <target name="octane-earley-boyer-rhino" depends="jar, earley-boyer-init, octane-verbose">
    <antcall target="run-octane-rhino"/>
  </target>

  <!-- gbemu -->  
  <target name="gbemu-init">
    <property name="octane-tests" value="${octane-test-sys-prop.test.js.roots}/gbemu.js"/>
  </target>

  <target name="octane-gbemu" depends="jar, gbemu-init, octane-verbose">
    <antcall target="run-octane"/>
  </target>

  <target name="octane-gbemu-v8" depends="jar, gbemu-init, octane-verbose">
    <antcall target="run-octane-v8"/>
  </target>

  <target name="octane-gbemu-rhino" depends="jar, gbemu-init, octane-verbose">
    <antcall target="run-octane-rhino"/>
  </target>

  <!-- navier-stokes -->
  <target name="navier-stokes-init">
    <property name="octane-tests" value="${octane-test-sys-prop.test.js.roots}/navier-stokes.js"/>
  </target>

  <target name="octane-navier-stokes" depends="jar, navier-stokes-init, octane-verbose">
    <antcall target="run-octane"/>
  </target>

  <target name="octane-navier-stokes-v8" depends="jar, navier-stokes-init, octane-verbose">
    <antcall target="run-octane-v8"/>
  </target>

  <target name="octane-navier-stokes-rhino" depends="jar, navier-stokes-init, octane-verbose">
    <antcall target="run-octane-rhino"/>
  </target>

  <!-- pdfjs -->  
  <target name="pdfjs-init">
    <property name="octane-tests" value="${octane-test-sys-prop.test.js.roots}/pdfjs.js"/>
  </target>

  <target name="octane-pdfjs" depends="jar, pdfjs-init, octane-verbose">
    <antcall target="run-octane"/>
  </target>

  <target name="octane-pdfjs-v8" depends="jar, pdfjs-init, octane-verbose">
    <antcall target="run-octane-v8"/>
  </target>

  <target name="octane-pdfjs-rhino" depends="jar, pdfjs-init, octane-verbose">
    <antcall target="run-octane-rhino"/>
  </target>

  <!-- raytrace -->
  <target name="raytrace-init">
    <property name="octane-tests" value="${octane-test-sys-prop.test.js.roots}/raytrace.js"/>
  </target>

  <target name="octane-raytrace" depends="jar, raytrace-init, octane-verbose">
    <antcall target="run-octane"/>
  </target>

  <target name="octane-raytrace-v8" depends="jar, raytrace-init, octane-verbose">
    <antcall target="run-octane-v8"/>
  </target>

  <target name="octane-raytrace-rhino" depends="jar, raytrace-init, octane-verbose">
    <antcall target="run-octane-rhino"/>
  </target>

  <!-- regexp -->
  <target name="regexp-init">
    <property name="octane-tests" value="${octane-test-sys-prop.test.js.roots}/regexp.js"/>
  </target>

  <target name="octane-regexp" depends="jar, regexp-init, octane-verbose">
    <antcall target="run-octane"/>
  </target>

  <target name="octane-regexp-octane-v8" depends="jar, regexp-init, octane-verbose">
    <antcall target="run-octane-v8"/>
  </target>

  <target name="octane-regexp-rhino" depends="jar, regexp-init, octane-verbose">
    <antcall target="run-octane-rhino"/>
  </target>


  <!-- splay -->
  <target name="splay-init">
    <property name="octane-tests" value="${octane-test-sys-prop.test.js.roots}/splay.js"/>
  </target>

  <target name="octane-splay" depends="jar, splay-init, octane-verbose">
    <antcall target="run-octane"/>
  </target>

  <target name="octane-splay-v8" depends="jar, splay-init, octane-verbose">
    <antcall target="run-octane-v8"/>
  </target>

  <target name="octane-splay-rhino" depends="jar, splay-init, octane-verbose">
    <antcall target="run-octane-rhino"/>
  </target>

  <target name="octane-verbose">
    <property name="extra-arg" value="--verbose"/>
  </target>

  <!-- run octane benchmarks using Nashorn as runtime -->
  <target name="octane" depends="octane-init">
    <antcall target="run-octane"/>
  </target>

  <!-- run octane benchmarks using octane as runtime -->
  <target name="octane-v8" depends="octane-init">
    <antcall target="run-octane-v8"/>
  </target>

  <!-- run octane benchmarks using Rhino as runtime -->
  <target name="octane-rhino" depends="octane-init">
    <antcall target="run-octane-rhino"/>
  </target>
  
  <target name="run-octane">
    <java classname="${nashorn.shell.tool}"
          classpath="${run.test.classpath}"
          fork="true"
          dir=".">
      <jvmarg line="${ext.class.path}"/>
      <jvmarg line="${run.test.jvmargs.octane}"/>
      <arg value="${octane-test-sys-prop.test.js.framework}"/>
      <arg value="--"/>
      <arg value="${octane-tests}"/>
      <arg value="--runtime"/>
      <arg value="Nashorn"/>
      <arg value="--verbose"/>
      <arg value="--iterations 8"/>
      <arg value="${extra-arg}"/>
    </java>
  </target>

  <target name="run-octane-v8">
    <exec executable="${v8.shell}">
      <arg value="${octane-test-sys-prop.test.js.framework}"/>
      <arg value="--"/>
      <arg value="${octane-tests}"/>      
      <arg value="--runtime"/>
      <arg value="v8"/>
      <arg value="--verbose"/>
      <arg value="--iterations 8"/>
      <arg value="${extra-arg}"/>
    </exec>
  </target>

  <target name="run-octane-rhino">
    <java jar="${rhino.jar}"
          classpath="${run.test.classpath}"
          fork="true"
          dir=".">
      <jvmarg line="${run.test.jvmargs.octane}"/>
      <arg value="${octane-test-sys-prop.test.js.framework}"/>
      <arg value="${octane-tests}"/>
      <arg value="--runtime"/>
      <arg value="Rhino"/>
      <arg value="--verbose"/>
      <arg value="--iterations 8"/>
      <arg value="${extra-arg}"/>
    </java>
  </target>

  <!-- run octane with all known runtimes for comparison -->
  <target name="octane-all" depends="octane, octane-v8, octane-rhino">
    <exec executable="${v8.shell}">
      <arg value="${octane-test-sys-prop.test.js.framework}"/>
      <arg value="${octane-tests}/"/>
    </exec>
  </target>
   
  <target name="sunspider-init" depends="jar">
    <fileset id="sunspider-set"
	     dir="${sunspider-test-sys-prop.test.js.roots}"
	     excludes="${sunspider-test-sys-prop.test.js.exclude.list}">
      <include name="**/*.js"/>
    </fileset>
    <pathconvert pathsep=" " property="sunspider-tests" refid="sunspider-set"/>
  </target>

  <!-- run sunspider with Nashorn -->
  <target name="sunspider" depends="sunspider-init">
    <java classname="${nashorn.shell.tool}"
          classpath="${run.test.classpath}"
          fork="true"
          dir=".">
      <jvmarg line="${ext.class.path}"/>
      <jvmarg line="${run.test.jvmargs}"/>
      <arg value="-timezone=PST"/>
      <arg value="--class-cache-size=50"/>
      <arg value="${sunspider-test-sys-prop.test.js.framework}"/>
      <arg value="--"/>
      <arg value="${sunspider-tests}/"/>
    </java>
  </target>

  <!-- run sunspider with v8 -->
  <target name="sunspider-v8" depends="sunspider-init">
    <exec executable="${v8.shell}">
      <arg value="${sunspider-test-sys-prop.test.js.framework}"/>
      <arg value="--"/>
      <arg value="${sunspider-tests}/"/>
    </exec>
  </target>

  <!-- run sunspider with Rhino -->
  <target name="sunspider-rhino" depends="sunspider-init">
    <java jar="${rhino.jar}"
          classpath="${run.test.classpath}"
          fork="true"
          dir=".">
      <jvmarg line="${run.test.jvmargs}"/>
      <arg value="${sunspider-test-sys-prop.test.js.framework}"/>
      <arg value="${sunspider-tests}/"/>
    </java>
  </target>

</project>
